@inject NavigationManager NavigationManager
<div class="filters">
    <label for="maxLength">Max Length</label>
    <input id="maxLength"
           type="number"
           class="form-control"
           @onkeydown="ApplyFilters"
           @bind:event="oninput"
           @bind="_maxLength"/>


    <label for="maxTime">Max Time (hours)</label>
    <input type="number"
           id="maxTime"
           class="form-control"
           @bind="_maxTime"/>
    <button class="btn btn-outline-primary bi bi-filter-circle"
            @onclick="FilterSearchResults">
        Filter
    </button>

    <button class="btn btn-outline-secondary"
            @onclick="ClearSearchFilter">
        Clear
    </button>


</div>

@code {
    private int _maxLength;
    private int _maxTime;

    [Parameter]
    public int? MaxLength { get; set; }

    [Parameter]
    public int? MaxTime { get; set; }

    protected override void OnInitialized()
    {
        _maxLength = MaxLength ?? 0;
        _maxTime = MaxTime ?? 0;
    }

    [Parameter]
    [EditorRequired]
    public string SearchTerm { get; set; } = default!;

    private void FilterSearchResults()
    {
        var uriWithQueryString = NavigationManager.GetUriWithQueryParameters(
            new Dictionary<string, object?>()
            {
                [nameof(SearchPage.MaxLength)] = _maxLength == 0 ? null : _maxLength,
                [nameof(SearchPage.MaxTime)] = _maxTime == 0 ? null : _maxTime
            });

        NavigationManager.NavigateTo(uriWithQueryString);
    }

    private void ClearSearchFilter()
    {
        _maxLength = 0;
        NavigationManager.NavigateTo($"/search/{SearchTerm}");
    }

    private void ApplyFilters(KeyboardEventArgs args)
    {
        if (args.Key != "Enter") return;
        FilterSearchResults();
    }

    
        

}